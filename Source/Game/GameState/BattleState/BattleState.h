#ifndef __Battle_State_h__
#define __Battle_State_h__

#include "../Gamestate.h"

class CBattleGameState : public CBaseGameState
{
private:

	//Instance
	static CBattleGameState* pInstance;


	//Objects

	//////////////////////////////////////////////////////////////////////////
	// Cameras
	//////////////////////////////////////////////////////////////////////////

	CFreeCamera* Camera0;
	CFreeCamera* Camera1;

	//////////////////////////////////////////////////////////////////////////
	// Cameras
	//////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////
	// Player stuff
	//////////////////////////////////////////////////////////////////////////


	CBarrell*	XCannon;
	CPlayer *	Player1;
	CShield*	ShieldPlayer1;


	CBarrell*	YCannon;
	CPlayer *	Player2;
	CShield*	ShieldPlayer2;



	//////////////////////////////////////////////////////////////////////////
	// Player stuff
	//////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////
	//	Things
	//////////////////////////////////////////////////////////////////////////

	//balls
	int numOfBalls;
	CBall *balls;

	//Targets
	int NumTargets;
	CTarget *Targets;

	//////////////////////////////////////////////////////////////////////////
	//	Things
	//////////////////////////////////////////////////////////////////////////


	//////////////////////////////////////////////////////////////////////////
	// 2D stuff
	//////////////////////////////////////////////////////////////////////////


	CLabel *	GameText;


	CLabel*		Score;


	CLabel*		Background;
	CLabel*		Exit;
	CLabel*		Resume;
	CLabel*		Restart;

	CLabel*		Me;


	//////////////////////////////////////////////////////////////////////////
	// 2D stuff
	//////////////////////////////////////////////////////////////////////////



	//////////////////////////////////////////////////////////////////////////
	//Numbers
	//////////////////////////////////////////////////////////////////////////


	float TargetPullbackForce;
	float TargetPulldownForce;

	CPhysicsScene m_Scene;
	CPhysicsScene m_2DScene;

	CPhysicsTimer shootTimer;
	float player1ShootingTime;

	CPhysicsTimer m_InputTimer;
	float m_InputFreq;

	CPhysicsTimer m_WinningTime;
	float m_WinningWait;


	//Vector for movement
	CVector3f player1DirectionVec;
	CVector3f player2DirectionVec;


	//Scoring
	int Player1Score, Player2Score, WinningScore;

	int CurrentState;

	//States
	enum {COUNT_DOWN = 0, WIN, PLAY, PAUSE};

	//Controls.
	int SHOOT,BLOCK,SPRINT,ROTATE_LEFT,ROTATE_RIGHT,START;



	//Numbers
	float MeForce;
	int CurrentSelection;

	//Selections
	enum {RESUME = 0, RESTART, EXIT};

	//////////////////////////////////////////////////////////////////////////
	//Numbers
	//////////////////////////////////////////////////////////////////////////



public:

	//Access
	static CBattleGameState* GetInstance();


	//Methods
	void Initalize(Game* game);
	void Update(float timeDelta);
	void Shutdown();

public:
	//Extra functions for this state.
	void Controls();
	void CollisionDetection();

	void GameRun();
	void Pause();
	void Initalize2D();
	void InitalizeObjects();
	void Reset();

};


#endif

